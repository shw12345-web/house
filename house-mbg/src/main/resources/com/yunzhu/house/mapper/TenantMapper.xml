<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunzhu.house.mapper.TenantMapper">
  <resultMap id="BaseResultMap" type="com.yunzhu.house.model.Tenant">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenantName" jdbcType="VARCHAR" property="tenantname" />
    <result column="tenantIdentify" jdbcType="VARCHAR" property="tenantidentify" />
    <result column="tenantTel" jdbcType="VARCHAR" property="tenanttel" />
    <result column="tenantFromShen" jdbcType="VARCHAR" property="tenantfromshen" />
    <result column="tenantFromShi" jdbcType="VARCHAR" property="tenantfromshi" />
    <result column="tenantFromXian" jdbcType="VARCHAR" property="tenantfromxian" />
    <result column="tenantWorkOrganization" jdbcType="VARCHAR" property="tenantworkorganization" />
    <result column="tenantDesc" jdbcType="VARCHAR" property="tenantdesc" />
    <result column="tenantImage" jdbcType="VARCHAR" property="tenantimage" />
    <result column="checkOpion" jdbcType="VARCHAR" property="checkopion" />
    <result column="checkerId" jdbcType="BIGINT" property="checkerid" />
    <result column="checkerName" jdbcType="VARCHAR" property="checkername" />
    <result column="checkDate" jdbcType="DATE" property="checkdate" />
    <result column="tenantCode" jdbcType="VARCHAR" property="tenantcode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenantName, tenantIdentify, tenantTel, tenantFromShen, tenantFromShi, tenantFromXian, 
    tenantWorkOrganization, tenantDesc, tenantImage, checkOpion, checkerId, checkerName, 
    checkDate, tenantCode
  </sql>
  <select id="selectByExample" parameterType="com.yunzhu.house.model.TenantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tenant
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tenant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunzhu.house.model.TenantExample">
    delete from tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunzhu.house.model.Tenant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tenant (tenantName, tenantIdentify, tenantTel, 
      tenantFromShen, tenantFromShi, tenantFromXian, 
      tenantWorkOrganization, tenantDesc, tenantImage, 
      checkOpion, checkerId, checkerName, 
      checkDate, tenantCode)
    values (#{tenantname,jdbcType=VARCHAR}, #{tenantidentify,jdbcType=VARCHAR}, #{tenanttel,jdbcType=VARCHAR}, 
      #{tenantfromshen,jdbcType=VARCHAR}, #{tenantfromshi,jdbcType=VARCHAR}, #{tenantfromxian,jdbcType=VARCHAR}, 
      #{tenantworkorganization,jdbcType=VARCHAR}, #{tenantdesc,jdbcType=VARCHAR}, #{tenantimage,jdbcType=VARCHAR}, 
      #{checkopion,jdbcType=VARCHAR}, #{checkerid,jdbcType=BIGINT}, #{checkername,jdbcType=VARCHAR}, 
      #{checkdate,jdbcType=DATE}, #{tenantcode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yunzhu.house.model.Tenant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tenant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantname != null">
        tenantName,
      </if>
      <if test="tenantidentify != null">
        tenantIdentify,
      </if>
      <if test="tenanttel != null">
        tenantTel,
      </if>
      <if test="tenantfromshen != null">
        tenantFromShen,
      </if>
      <if test="tenantfromshi != null">
        tenantFromShi,
      </if>
      <if test="tenantfromxian != null">
        tenantFromXian,
      </if>
      <if test="tenantworkorganization != null">
        tenantWorkOrganization,
      </if>
      <if test="tenantdesc != null">
        tenantDesc,
      </if>
      <if test="tenantimage != null">
        tenantImage,
      </if>
      <if test="checkopion != null">
        checkOpion,
      </if>
      <if test="checkerid != null">
        checkerId,
      </if>
      <if test="checkername != null">
        checkerName,
      </if>
      <if test="checkdate != null">
        checkDate,
      </if>
      <if test="tenantcode != null">
        tenantCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantname != null">
        #{tenantname,jdbcType=VARCHAR},
      </if>
      <if test="tenantidentify != null">
        #{tenantidentify,jdbcType=VARCHAR},
      </if>
      <if test="tenanttel != null">
        #{tenanttel,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromshen != null">
        #{tenantfromshen,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromshi != null">
        #{tenantfromshi,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromxian != null">
        #{tenantfromxian,jdbcType=VARCHAR},
      </if>
      <if test="tenantworkorganization != null">
        #{tenantworkorganization,jdbcType=VARCHAR},
      </if>
      <if test="tenantdesc != null">
        #{tenantdesc,jdbcType=VARCHAR},
      </if>
      <if test="tenantimage != null">
        #{tenantimage,jdbcType=VARCHAR},
      </if>
      <if test="checkopion != null">
        #{checkopion,jdbcType=VARCHAR},
      </if>
      <if test="checkerid != null">
        #{checkerid,jdbcType=BIGINT},
      </if>
      <if test="checkername != null">
        #{checkername,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        #{checkdate,jdbcType=DATE},
      </if>
      <if test="tenantcode != null">
        #{tenantcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunzhu.house.model.TenantExample" resultType="java.lang.Long">
    select count(*) from tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tenant
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.tenantname != null">
        tenantName = #{row.tenantname,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantidentify != null">
        tenantIdentify = #{row.tenantidentify,jdbcType=VARCHAR},
      </if>
      <if test="row.tenanttel != null">
        tenantTel = #{row.tenanttel,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantfromshen != null">
        tenantFromShen = #{row.tenantfromshen,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantfromshi != null">
        tenantFromShi = #{row.tenantfromshi,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantfromxian != null">
        tenantFromXian = #{row.tenantfromxian,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantworkorganization != null">
        tenantWorkOrganization = #{row.tenantworkorganization,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantdesc != null">
        tenantDesc = #{row.tenantdesc,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantimage != null">
        tenantImage = #{row.tenantimage,jdbcType=VARCHAR},
      </if>
      <if test="row.checkopion != null">
        checkOpion = #{row.checkopion,jdbcType=VARCHAR},
      </if>
      <if test="row.checkerid != null">
        checkerId = #{row.checkerid,jdbcType=BIGINT},
      </if>
      <if test="row.checkername != null">
        checkerName = #{row.checkername,jdbcType=VARCHAR},
      </if>
      <if test="row.checkdate != null">
        checkDate = #{row.checkdate,jdbcType=DATE},
      </if>
      <if test="row.tenantcode != null">
        tenantCode = #{row.tenantcode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tenant
    set id = #{row.id,jdbcType=BIGINT},
      tenantName = #{row.tenantname,jdbcType=VARCHAR},
      tenantIdentify = #{row.tenantidentify,jdbcType=VARCHAR},
      tenantTel = #{row.tenanttel,jdbcType=VARCHAR},
      tenantFromShen = #{row.tenantfromshen,jdbcType=VARCHAR},
      tenantFromShi = #{row.tenantfromshi,jdbcType=VARCHAR},
      tenantFromXian = #{row.tenantfromxian,jdbcType=VARCHAR},
      tenantWorkOrganization = #{row.tenantworkorganization,jdbcType=VARCHAR},
      tenantDesc = #{row.tenantdesc,jdbcType=VARCHAR},
      tenantImage = #{row.tenantimage,jdbcType=VARCHAR},
      checkOpion = #{row.checkopion,jdbcType=VARCHAR},
      checkerId = #{row.checkerid,jdbcType=BIGINT},
      checkerName = #{row.checkername,jdbcType=VARCHAR},
      checkDate = #{row.checkdate,jdbcType=DATE},
      tenantCode = #{row.tenantcode,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunzhu.house.model.Tenant">
    update tenant
    <set>
      <if test="tenantname != null">
        tenantName = #{tenantname,jdbcType=VARCHAR},
      </if>
      <if test="tenantidentify != null">
        tenantIdentify = #{tenantidentify,jdbcType=VARCHAR},
      </if>
      <if test="tenanttel != null">
        tenantTel = #{tenanttel,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromshen != null">
        tenantFromShen = #{tenantfromshen,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromshi != null">
        tenantFromShi = #{tenantfromshi,jdbcType=VARCHAR},
      </if>
      <if test="tenantfromxian != null">
        tenantFromXian = #{tenantfromxian,jdbcType=VARCHAR},
      </if>
      <if test="tenantworkorganization != null">
        tenantWorkOrganization = #{tenantworkorganization,jdbcType=VARCHAR},
      </if>
      <if test="tenantdesc != null">
        tenantDesc = #{tenantdesc,jdbcType=VARCHAR},
      </if>
      <if test="tenantimage != null">
        tenantImage = #{tenantimage,jdbcType=VARCHAR},
      </if>
      <if test="checkopion != null">
        checkOpion = #{checkopion,jdbcType=VARCHAR},
      </if>
      <if test="checkerid != null">
        checkerId = #{checkerid,jdbcType=BIGINT},
      </if>
      <if test="checkername != null">
        checkerName = #{checkername,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        checkDate = #{checkdate,jdbcType=DATE},
      </if>
      <if test="tenantcode != null">
        tenantCode = #{tenantcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunzhu.house.model.Tenant">
    update tenant
    set tenantName = #{tenantname,jdbcType=VARCHAR},
      tenantIdentify = #{tenantidentify,jdbcType=VARCHAR},
      tenantTel = #{tenanttel,jdbcType=VARCHAR},
      tenantFromShen = #{tenantfromshen,jdbcType=VARCHAR},
      tenantFromShi = #{tenantfromshi,jdbcType=VARCHAR},
      tenantFromXian = #{tenantfromxian,jdbcType=VARCHAR},
      tenantWorkOrganization = #{tenantworkorganization,jdbcType=VARCHAR},
      tenantDesc = #{tenantdesc,jdbcType=VARCHAR},
      tenantImage = #{tenantimage,jdbcType=VARCHAR},
      checkOpion = #{checkopion,jdbcType=VARCHAR},
      checkerId = #{checkerid,jdbcType=BIGINT},
      checkerName = #{checkername,jdbcType=VARCHAR},
      checkDate = #{checkdate,jdbcType=DATE},
      tenantCode = #{tenantcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>