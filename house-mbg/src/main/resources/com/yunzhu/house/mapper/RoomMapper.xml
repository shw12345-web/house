<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunzhu.house.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="com.yunzhu.house.model.Room">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="roomName" jdbcType="VARCHAR" property="roomname" />
    <result column="roomArea" jdbcType="VARCHAR" property="roomarea" />
    <result column="roomDesc" jdbcType="VARCHAR" property="roomdesc" />
    <result column="roomTwoDimensionalCode" jdbcType="VARCHAR" property="roomtwodimensionalcode" />
    <result column="roomImage" jdbcType="VARCHAR" property="roomimage" />
    <result column="houseId" jdbcType="BIGINT" property="houseid" />
    <result column="houseName" jdbcType="VARCHAR" property="housename" />
    <result column="checkOpion" jdbcType="VARCHAR" property="checkopion" />
    <result column="checkerId" jdbcType="BIGINT" property="checkerid" />
    <result column="checkerName" jdbcType="VARCHAR" property="checkername" />
    <result column="checkDate" jdbcType="DATE" property="checkdate" />
    <result column="registDate" jdbcType="DATE" property="registdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roomName, roomArea, roomDesc, roomTwoDimensionalCode, roomImage, houseId, houseName, 
    checkOpion, checkerId, checkerName, checkDate, registDate
  </sql>
  <select id="selectByExample" parameterType="com.yunzhu.house.model.RoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from room
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunzhu.house.model.RoomExample">
    delete from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunzhu.house.model.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (roomName, roomArea, roomDesc, 
      roomTwoDimensionalCode, roomImage, houseId, 
      houseName, checkOpion, checkerId, 
      checkerName, checkDate, registDate
      )
    values (#{roomname,jdbcType=VARCHAR}, #{roomarea,jdbcType=VARCHAR}, #{roomdesc,jdbcType=VARCHAR}, 
      #{roomtwodimensionalcode,jdbcType=VARCHAR}, #{roomimage,jdbcType=VARCHAR}, #{houseid,jdbcType=BIGINT}, 
      #{housename,jdbcType=VARCHAR}, #{checkopion,jdbcType=VARCHAR}, #{checkerid,jdbcType=BIGINT}, 
      #{checkername,jdbcType=VARCHAR}, #{checkdate,jdbcType=DATE}, #{registdate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunzhu.house.model.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomname != null">
        roomName,
      </if>
      <if test="roomarea != null">
        roomArea,
      </if>
      <if test="roomdesc != null">
        roomDesc,
      </if>
      <if test="roomtwodimensionalcode != null">
        roomTwoDimensionalCode,
      </if>
      <if test="roomimage != null">
        roomImage,
      </if>
      <if test="houseid != null">
        houseId,
      </if>
      <if test="housename != null">
        houseName,
      </if>
      <if test="checkopion != null">
        checkOpion,
      </if>
      <if test="checkerid != null">
        checkerId,
      </if>
      <if test="checkername != null">
        checkerName,
      </if>
      <if test="checkdate != null">
        checkDate,
      </if>
      <if test="registdate != null">
        registDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomname != null">
        #{roomname,jdbcType=VARCHAR},
      </if>
      <if test="roomarea != null">
        #{roomarea,jdbcType=VARCHAR},
      </if>
      <if test="roomdesc != null">
        #{roomdesc,jdbcType=VARCHAR},
      </if>
      <if test="roomtwodimensionalcode != null">
        #{roomtwodimensionalcode,jdbcType=VARCHAR},
      </if>
      <if test="roomimage != null">
        #{roomimage,jdbcType=VARCHAR},
      </if>
      <if test="houseid != null">
        #{houseid,jdbcType=BIGINT},
      </if>
      <if test="housename != null">
        #{housename,jdbcType=VARCHAR},
      </if>
      <if test="checkopion != null">
        #{checkopion,jdbcType=VARCHAR},
      </if>
      <if test="checkerid != null">
        #{checkerid,jdbcType=BIGINT},
      </if>
      <if test="checkername != null">
        #{checkername,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        #{checkdate,jdbcType=DATE},
      </if>
      <if test="registdate != null">
        #{registdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunzhu.house.model.RoomExample" resultType="java.lang.Long">
    select count(*) from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update room
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.roomname != null">
        roomName = #{row.roomname,jdbcType=VARCHAR},
      </if>
      <if test="row.roomarea != null">
        roomArea = #{row.roomarea,jdbcType=VARCHAR},
      </if>
      <if test="row.roomdesc != null">
        roomDesc = #{row.roomdesc,jdbcType=VARCHAR},
      </if>
      <if test="row.roomtwodimensionalcode != null">
        roomTwoDimensionalCode = #{row.roomtwodimensionalcode,jdbcType=VARCHAR},
      </if>
      <if test="row.roomimage != null">
        roomImage = #{row.roomimage,jdbcType=VARCHAR},
      </if>
      <if test="row.houseid != null">
        houseId = #{row.houseid,jdbcType=BIGINT},
      </if>
      <if test="row.housename != null">
        houseName = #{row.housename,jdbcType=VARCHAR},
      </if>
      <if test="row.checkopion != null">
        checkOpion = #{row.checkopion,jdbcType=VARCHAR},
      </if>
      <if test="row.checkerid != null">
        checkerId = #{row.checkerid,jdbcType=BIGINT},
      </if>
      <if test="row.checkername != null">
        checkerName = #{row.checkername,jdbcType=VARCHAR},
      </if>
      <if test="row.checkdate != null">
        checkDate = #{row.checkdate,jdbcType=DATE},
      </if>
      <if test="row.registdate != null">
        registDate = #{row.registdate,jdbcType=DATE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update room
    set id = #{row.id,jdbcType=BIGINT},
      roomName = #{row.roomname,jdbcType=VARCHAR},
      roomArea = #{row.roomarea,jdbcType=VARCHAR},
      roomDesc = #{row.roomdesc,jdbcType=VARCHAR},
      roomTwoDimensionalCode = #{row.roomtwodimensionalcode,jdbcType=VARCHAR},
      roomImage = #{row.roomimage,jdbcType=VARCHAR},
      houseId = #{row.houseid,jdbcType=BIGINT},
      houseName = #{row.housename,jdbcType=VARCHAR},
      checkOpion = #{row.checkopion,jdbcType=VARCHAR},
      checkerId = #{row.checkerid,jdbcType=BIGINT},
      checkerName = #{row.checkername,jdbcType=VARCHAR},
      checkDate = #{row.checkdate,jdbcType=DATE},
      registDate = #{row.registdate,jdbcType=DATE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunzhu.house.model.Room">
    update room
    <set>
      <if test="roomname != null">
        roomName = #{roomname,jdbcType=VARCHAR},
      </if>
      <if test="roomarea != null">
        roomArea = #{roomarea,jdbcType=VARCHAR},
      </if>
      <if test="roomdesc != null">
        roomDesc = #{roomdesc,jdbcType=VARCHAR},
      </if>
      <if test="roomtwodimensionalcode != null">
        roomTwoDimensionalCode = #{roomtwodimensionalcode,jdbcType=VARCHAR},
      </if>
      <if test="roomimage != null">
        roomImage = #{roomimage,jdbcType=VARCHAR},
      </if>
      <if test="houseid != null">
        houseId = #{houseid,jdbcType=BIGINT},
      </if>
      <if test="housename != null">
        houseName = #{housename,jdbcType=VARCHAR},
      </if>
      <if test="checkopion != null">
        checkOpion = #{checkopion,jdbcType=VARCHAR},
      </if>
      <if test="checkerid != null">
        checkerId = #{checkerid,jdbcType=BIGINT},
      </if>
      <if test="checkername != null">
        checkerName = #{checkername,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        checkDate = #{checkdate,jdbcType=DATE},
      </if>
      <if test="registdate != null">
        registDate = #{registdate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunzhu.house.model.Room">
    update room
    set roomName = #{roomname,jdbcType=VARCHAR},
      roomArea = #{roomarea,jdbcType=VARCHAR},
      roomDesc = #{roomdesc,jdbcType=VARCHAR},
      roomTwoDimensionalCode = #{roomtwodimensionalcode,jdbcType=VARCHAR},
      roomImage = #{roomimage,jdbcType=VARCHAR},
      houseId = #{houseid,jdbcType=BIGINT},
      houseName = #{housename,jdbcType=VARCHAR},
      checkOpion = #{checkopion,jdbcType=VARCHAR},
      checkerId = #{checkerid,jdbcType=BIGINT},
      checkerName = #{checkername,jdbcType=VARCHAR},
      checkDate = #{checkdate,jdbcType=DATE},
      registDate = #{registdate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>