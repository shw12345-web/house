<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunzhu.house.mapper.HouseOrderMapper">
  <resultMap id="BaseResultMap" type="com.yunzhu.house.model.HouseOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="houseId" jdbcType="BIGINT" property="houseid" />
    <result column="tenantId" jdbcType="BIGINT" property="tenantid" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="orderStart" jdbcType="TIMESTAMP" property="orderstart" />
    <result column="orderEnd" jdbcType="TIMESTAMP" property="orderend" />
    <result column="payStart" jdbcType="TIMESTAMP" property="paystart" />
    <result column="payEnd" jdbcType="TIMESTAMP" property="payend" />
    <result column="rentTotal" jdbcType="DECIMAL" property="renttotal" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="member_username" jdbcType="VARCHAR" property="memberUsername" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, houseId, tenantId, order_no, title, orderStart, orderEnd, payStart, payEnd, rentTotal, 
    create_time, member_username, amount, pay_type, source_type, status, order_type, 
    delete_status, payment_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.yunzhu.house.model.HouseOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from house_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunzhu.house.model.HouseOrderExample">
    delete from house_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunzhu.house.model.HouseOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into house_order (houseId, tenantId, order_no, 
      title, orderStart, orderEnd, 
      payStart, payEnd, rentTotal, 
      create_time, member_username, amount, 
      pay_type, source_type, status, 
      order_type, delete_status, payment_time, 
      modify_time)
    values (#{houseid,jdbcType=BIGINT}, #{tenantid,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{orderstart,jdbcType=TIMESTAMP}, #{orderend,jdbcType=TIMESTAMP}, 
      #{paystart,jdbcType=TIMESTAMP}, #{payend,jdbcType=TIMESTAMP}, #{renttotal,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{memberUsername,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{payType,jdbcType=INTEGER}, #{sourceType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{orderType,jdbcType=INTEGER}, #{deleteStatus,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yunzhu.house.model.HouseOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into house_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseid != null">
        houseId,
      </if>
      <if test="tenantid != null">
        tenantId,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="orderstart != null">
        orderStart,
      </if>
      <if test="orderend != null">
        orderEnd,
      </if>
      <if test="paystart != null">
        payStart,
      </if>
      <if test="payend != null">
        payEnd,
      </if>
      <if test="renttotal != null">
        rentTotal,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="memberUsername != null">
        member_username,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseid != null">
        #{houseid,jdbcType=BIGINT},
      </if>
      <if test="tenantid != null">
        #{tenantid,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="orderstart != null">
        #{orderstart,jdbcType=TIMESTAMP},
      </if>
      <if test="orderend != null">
        #{orderend,jdbcType=TIMESTAMP},
      </if>
      <if test="paystart != null">
        #{paystart,jdbcType=TIMESTAMP},
      </if>
      <if test="payend != null">
        #{payend,jdbcType=TIMESTAMP},
      </if>
      <if test="renttotal != null">
        #{renttotal,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberUsername != null">
        #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunzhu.house.model.HouseOrderExample" resultType="java.lang.Long">
    select count(*) from house_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house_order
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.houseid != null">
        houseId = #{row.houseid,jdbcType=BIGINT},
      </if>
      <if test="row.tenantid != null">
        tenantId = #{row.tenantid,jdbcType=BIGINT},
      </if>
      <if test="row.orderNo != null">
        order_no = #{row.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.orderstart != null">
        orderStart = #{row.orderstart,jdbcType=TIMESTAMP},
      </if>
      <if test="row.orderend != null">
        orderEnd = #{row.orderend,jdbcType=TIMESTAMP},
      </if>
      <if test="row.paystart != null">
        payStart = #{row.paystart,jdbcType=TIMESTAMP},
      </if>
      <if test="row.payend != null">
        payEnd = #{row.payend,jdbcType=TIMESTAMP},
      </if>
      <if test="row.renttotal != null">
        rentTotal = #{row.renttotal,jdbcType=DECIMAL},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.memberUsername != null">
        member_username = #{row.memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="row.amount != null">
        amount = #{row.amount,jdbcType=DECIMAL},
      </if>
      <if test="row.payType != null">
        pay_type = #{row.payType,jdbcType=INTEGER},
      </if>
      <if test="row.sourceType != null">
        source_type = #{row.sourceType,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.orderType != null">
        order_type = #{row.orderType,jdbcType=INTEGER},
      </if>
      <if test="row.deleteStatus != null">
        delete_status = #{row.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="row.paymentTime != null">
        payment_time = #{row.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.modifyTime != null">
        modify_time = #{row.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house_order
    set id = #{row.id,jdbcType=BIGINT},
      houseId = #{row.houseid,jdbcType=BIGINT},
      tenantId = #{row.tenantid,jdbcType=BIGINT},
      order_no = #{row.orderNo,jdbcType=VARCHAR},
      title = #{row.title,jdbcType=VARCHAR},
      orderStart = #{row.orderstart,jdbcType=TIMESTAMP},
      orderEnd = #{row.orderend,jdbcType=TIMESTAMP},
      payStart = #{row.paystart,jdbcType=TIMESTAMP},
      payEnd = #{row.payend,jdbcType=TIMESTAMP},
      rentTotal = #{row.renttotal,jdbcType=DECIMAL},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      member_username = #{row.memberUsername,jdbcType=VARCHAR},
      amount = #{row.amount,jdbcType=DECIMAL},
      pay_type = #{row.payType,jdbcType=INTEGER},
      source_type = #{row.sourceType,jdbcType=INTEGER},
      status = #{row.status,jdbcType=INTEGER},
      order_type = #{row.orderType,jdbcType=INTEGER},
      delete_status = #{row.deleteStatus,jdbcType=INTEGER},
      payment_time = #{row.paymentTime,jdbcType=TIMESTAMP},
      modify_time = #{row.modifyTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunzhu.house.model.HouseOrder">
    update house_order
    <set>
      <if test="houseid != null">
        houseId = #{houseid,jdbcType=BIGINT},
      </if>
      <if test="tenantid != null">
        tenantId = #{tenantid,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="orderstart != null">
        orderStart = #{orderstart,jdbcType=TIMESTAMP},
      </if>
      <if test="orderend != null">
        orderEnd = #{orderend,jdbcType=TIMESTAMP},
      </if>
      <if test="paystart != null">
        payStart = #{paystart,jdbcType=TIMESTAMP},
      </if>
      <if test="payend != null">
        payEnd = #{payend,jdbcType=TIMESTAMP},
      </if>
      <if test="renttotal != null">
        rentTotal = #{renttotal,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberUsername != null">
        member_username = #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunzhu.house.model.HouseOrder">
    update house_order
    set houseId = #{houseid,jdbcType=BIGINT},
      tenantId = #{tenantid,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      orderStart = #{orderstart,jdbcType=TIMESTAMP},
      orderEnd = #{orderend,jdbcType=TIMESTAMP},
      payStart = #{paystart,jdbcType=TIMESTAMP},
      payEnd = #{payend,jdbcType=TIMESTAMP},
      rentTotal = #{renttotal,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      member_username = #{memberUsername,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=INTEGER},
      source_type = #{sourceType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>